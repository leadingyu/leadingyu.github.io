<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Liding's blogs (Posts about security)</title><link>https://leadingyu.github.io/</link><description></description><atom:link href="https://leadingyu.github.io/categories/security.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2025 &lt;a href="mailto:lidingyu.hust@gmail.com"&gt;Liding&lt;/a&gt; </copyright><lastBuildDate>Sat, 09 Aug 2025 22:42:00 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Credit card in FPE</title><link>https://leadingyu.github.io/posts/2025-07-26-credit-card-in-fpe/</link><dc:creator>Liding</dc:creator><description>&lt;h3&gt;1. &lt;strong&gt;What is FPE (Format-Preserving Encryption)?&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Format-Preserving Encryption&lt;/strong&gt; is a type of encryption where the &lt;strong&gt;output (ciphertext)&lt;/strong&gt; has the same format as the &lt;strong&gt;input (plaintext)&lt;/strong&gt;. For credit card numbers, this means the encrypted value still "looks like" a credit card number (same length, numeric only, and may still pass Luhn checks if required).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why important?&lt;/strong&gt;&lt;br&gt;
It enables legacy payment systems, databases, APIs, and message formats to store or process "encrypted" data &lt;strong&gt;without breaking compatibility&lt;/strong&gt; or requiring massive changes across every integration point.&lt;/p&gt;
&lt;h3&gt;2. &lt;strong&gt;How is FPE Used with Credit Card Numbers (PANs)?&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Credit Card PANs&lt;/strong&gt; (Primary Account Numbers) are 16 digits (sometimes 15 or 19, but 16 is the most common).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Industry standards (PCI DSS) &lt;strong&gt;disallow storing PAN in cleartext&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Standard FPE Pattern:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;First 6 digits&lt;/strong&gt;: The &lt;strong&gt;Issuer Identification Number&lt;/strong&gt; (IIN/BIN) — identifies bank and card type. Often preserved for routing/fraud/risk logic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Last 4 digits&lt;/strong&gt;: Used for display, user verification, receipts, etc. Usually preserved.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Middle 6 digits&lt;/strong&gt;: These are &lt;strong&gt;FPE-encrypted&lt;/strong&gt; (sometimes more digits if the card is longer).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;PAN (plain)&lt;/th&gt;
&lt;th&gt;4 5 5 6 7 3 7 5 8 6 9 0 1 2 3 4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;FPE Result&lt;/td&gt;
&lt;td&gt;4 5 5 6 7 3 X X X X X X 1 2 3 4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;3. &lt;strong&gt;How is FPE implemented?&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;There are &lt;strong&gt;multiple FPE algorithms&lt;/strong&gt;. 1 common, standards-based approache&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;FF1/FF3 (NIST FPE Standards)&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NIST SP 800-38G&lt;/strong&gt; defines FF1 and FF3, which are &lt;strong&gt;AES-based, format-preserving encryption&lt;/strong&gt; algorithms.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Widely adopted and supported by vendors (e.g., Thales, Voltage/Micro Focus, AWS, Google Cloud KMS, etc.).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;These can encrypt a string of digits and return a string of digits, with specified radix and length.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;How it works (high-level):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Secret key (AES key) is managed in HSM or KMS.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Take the substring to encrypt (the middle digits), plus any required "tweak" (sometimes, transaction metadata or index).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Produce ciphertext digits, same length.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Combine with preserved prefix/suffix for a valid PAN-format string.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;4. &lt;strong&gt;Example System Design (Simplified):&lt;/strong&gt;&lt;/h3&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nf"&gt;graph&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TD&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"User Entry (Card #)"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&amp;gt;|&lt;/span&gt;&lt;span class="s"&gt;"TLS/HTTPS"&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;API&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"API Gateway"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;API&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FPE&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Encrypt Middle Digits (FF1/FF3)"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;FPE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Vault Database"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;DB&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Payment Service"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&amp;gt;|&lt;/span&gt;&lt;span class="s"&gt;"Request with Permission"&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;KMS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Key Management Service (FPE Key)"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;KMS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&amp;gt;|&lt;/span&gt;&lt;span class="s"&gt;"Return FPE"&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&amp;gt;|&lt;/span&gt;&lt;span class="s"&gt;"Decrypted PAN"&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PCI_SERVICE&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"authorized process(normally the service is living in PCI env)"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;5. &lt;strong&gt;Summary &amp;amp; Recommendations&lt;/strong&gt;&lt;/h3&gt;
&lt;h4&gt;Security&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;FPE&lt;/strong&gt; (FF1/FF3) is the modern, compliant way to "encrypt-in-place" for credit card PANs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Always use enterprise-proven libraries&lt;/strong&gt; — never roll your own crypto!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Strong access control&lt;/strong&gt;: Only very few, auditable services can decrypt full PANs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Compliance&lt;/strong&gt;: PCI DSS mandates all PAN storage/encryption practices — FPE is specifically allowed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Engineering&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Store only what is needed (BIN first-6 and last-4); never log full PAN, even in FPE form, unless business-justified.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All cryptographic operations (encrypt/decrypt) are logged and auditable.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><category>algorithem</category><category>credit card</category><category>security</category><guid>https://leadingyu.github.io/posts/2025-07-26-credit-card-in-fpe/</guid><pubDate>Sat, 09 Aug 2025 20:13:12 GMT</pubDate></item></channel></rss>